plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.example.my_vocab"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs+=['-Xjvm-default=enable']
    }

    buildFeatures{

        viewBinding true

    }
    testOptions{

        unitTests{
            includeAndroidResources=true
        }

    }
}

dependencies {

    def lifecycle_version = "2.6.0-alpha02"
    def arch_version = "2.1.0"

     implementation 'androidx.navigation:navigation-fragment-ktx:2.5.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.2'
    testImplementation 'org.junit.jupiter:junit-jupiter'


    // ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    // ViewModel utilities for Compose
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version")
    // LiveData
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
    // Lifecycles only (without ViewModel or LiveData)
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")

    // Saved state module for ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:2.5.1")

    // Annotation processor
    kapt("androidx.lifecycle:lifecycle-compiler:$lifecycle_version")
    // alternately - if using Java8, use the following instead of lifecycle-compiler
//    implementation("androidx.lifecycle:lifecycle-common-java8:$lifecycle_version")


                        //cameraX libraries


    def camerax_version = "1.2.0-beta01"
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-video:${camerax_version}"

    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation "androidx.camera:camera-extensions:${camerax_version}"


//    implementation " wtf :androidTestImplementation android withut the faq androidTestImplementation shit happens and ence life is basically fucked"

                        //  ML KIT LIBRARIES

    implementation 'com.google.mlkit:translate:17.0.1'
    implementation 'com.google.android.gms:play-services-mlkit-text-recognition:18.0.1'

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'


        // Logger timber
    implementation 'com.jakewharton.timber:timber:5.0.1'


            //   glide image loading library

    implementation 'com.github.bumptech.glide:glide:4.13.2'


            //      dagger hilt
    implementation "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-android-compiler:2.38.1"


            //room database libraries
    implementation "androidx.room:room-ktx:$rootProject.roomVersion"
    kapt "androidx.room:room-compiler:$rootProject.roomVersion"
    androidTestImplementation "androidx.room:room-testing:$rootProject.roomVersion"

            //SPLASH SCREEN API
    implementation "androidx.core:core-splashscreen:1.0.0"


        //LOTTIEFILES
    implementation "com.airbnb.android:lottie:$rootProject.lottieVersion"


        // MOTION LAYOUT
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"

        //TESTING LIBRARIES
    testImplementation "org.hamcrest:hamcrest-all:2.2"



    // Core library
    androidTestImplementation "androidx.test:core:1.4.0"

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation "androidx.test:runner:1.4.0"
    androidTestImplementation "androidx.test:rules:1.4.0"

    // Assertions
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation "androidx.test.ext:truth:1.4.0"

    // Espresso dependencies
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-intents:3.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-accessibility:3.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-web:3.4.0"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:3.4.0"

    // The following Espresso dependency can be either "implementation",
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APKâ€™"s compile classpath or the test APK
    // classpath.
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:3.4.0"

    testImplementation 'org.robolectric:robolectric:4.8'


}